{"version":3,"sources":["pages/home/home.jsx"],"names":["home","props","openUrl","params","console","log","url","window","open","state","data","json","options","children","label","this","className","placeholder","onChange","text","tree","filter","ref","e","highlightCurrent","nodeKey","indent","defaultExpandedKeys","accordion","onNodeClicked","filterNodeMethod","value","title","indexOf","Component"],"mappings":"sh8JAMqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,QAAU,SAAAC,GACNC,QAAQC,IAAIF,GACPA,EAAOG,KACZC,OAAOC,KAAKL,EAAOG,IAAK,WAZxB,EAAKG,MAAQ,CACTC,KAAMC,EACNC,QAAS,CACLC,SAAU,WACVC,MAAO,UANA,E,qDAiBT,IAAD,SACqBC,KAAKN,MAAvBC,EADH,EACGA,KAAME,EADT,EACSA,QAEd,OADAR,QAAQC,IAAR,OAAoBM,GAEhB,sBAAKK,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,QAAD,CAAOC,YAAY,yDAAYC,SAAU,SAAAC,GAAI,OAAI,EAAKC,KAAKC,OAAOF,QAEtE,cAAC,OAAD,CACIG,IAAK,SAAAC,GAAC,OAAK,EAAKH,KAAOG,GACvBb,KAAMA,EACNc,kBAAkB,EAClBZ,QAASA,EACTa,QAAQ,KACRC,OAAQ,GACRC,oBAAqB,CAAC,KAEtBC,WAAW,EAUXC,cAAed,KAAKb,QACpB4B,iBAAkB,SAACC,EAAOrB,GACtB,OAAKqB,IACiC,IAA/BrB,EAAKsB,MAAMC,QAAQF,a,GAhDhBG","file":"static/js/4.e332f52f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './home.scss';\r\nimport { Tree, Input } from 'element-react';\r\nimport 'element-theme-default';\r\nimport json from '@/../public/chrome-bookmark.json';\r\n\r\nexport default class home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: json,\r\n            options: {\r\n                children: 'children',\r\n                label: 'title',\r\n            },\r\n        };\r\n    }\r\n\r\n    openUrl = params => {\r\n        console.log(params);\r\n        if (!params.url) return;\r\n        window.open(params.url, '_blank');\r\n    };\r\n\r\n    render() {\r\n        const { data, options } = this.state;\r\n        console.log(`json`, json);\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"search\">\r\n                    <Input placeholder=\"输入关键字进行过滤\" onChange={text => this.tree.filter(text)} />\r\n                </div>\r\n                <Tree\r\n                    ref={e => (this.tree = e)}\r\n                    data={data}\r\n                    highlightCurrent={true}\r\n                    options={options}\r\n                    nodeKey=\"id\"\r\n                    indent={25}\r\n                    defaultExpandedKeys={['1']}\r\n                    // defaultExpandAll={true}\r\n                    accordion={true}\r\n                    // renderContent={(nodeModel, data, store) => {\r\n                    //     console.log(`nodeModel`, nodeModel);\r\n                    //     return (\r\n                    //         <span>\r\n                    //             <img src={data.url} />\r\n                    //             <span className=\"el-tree-node__label\">{data.title}</span>\r\n                    //         </span>\r\n                    //     );\r\n                    // }}\r\n                    onNodeClicked={this.openUrl}\r\n                    filterNodeMethod={(value, data) => {\r\n                        if (!value) return true;\r\n                        return data.title.indexOf(value) !== -1;\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}